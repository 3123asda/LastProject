import java.util.Scanner;
import java.sql.*;
import java.util.concurrent.ThreadLocalRandom;

public class student_teacher_data {
    static Scanner call_scanner = new Scanner(System.in);
    static String first_name,middle_name,last_name;
    static String middle_name_FirstLetter;
    static String coc_account_email;

    static String last_first_middle_format;

    static double Year_Divide_4,leap_year;
    static int birth_year;
    static String birth_month;
    static boolean year_loop;
    static int birth_day,Con_birth_year;
    static String add_more_list;
    static int ict_grade,pr_grade,philo_grade,fil_grade,pe_grade;
    static String student_complete_name, student_complete_YearBirth , student_complete_name_ConvertUpperCase,student_ID;

    static String student_duplicate_name,student_duplicate_name_ConvertUpperCase;

    //Convert to String
    static String ConStr_birth_year,ConStr_birth_day,coc_account_password ;

    static String sql_String_Birth_Year,student_BirthMonthComplete,sql_String_Birth_Day;

    static  String convert_BirthYearString,convert_BirthDayString;
    static String student_BornMonth;
    static  String tableName;
    static String student_AddCompleteBirthDay;

    static  String student_id;
    static double total_average;
    public static String input_RealName(Scanner call_scanner) {
        while (true) {
            first_name_loop:
            while (true) {
                System.out.print("Student First Name: ");
                first_name = call_scanner.next().toLowerCase().trim();
                call_scanner.nextLine();
                if (first_name.matches("[a-z \\s]+")) {
                    String[] con_arr_first_name = {first_name};
                    String first_name_FirstLetter = (con_arr_first_name[0].charAt(0)) + "";
                    if (first_name_FirstLetter.matches("[a-z]")) {
                        try {
                            String first_name_SecondLetter = (con_arr_first_name[0].charAt(1)) + "";
                            if (first_name_SecondLetter.matches("[a-z]")) {
                                //middle_name_loop
                                while (true){
                                    System.out.println("If You Don't Have a Middle Name You Can Just Type None");
                                    System.out.print("Student Middle Name: ");
                                    middle_name = call_scanner.next().toLowerCase().trim();
                                    call_scanner.nextLine();
                                    if(middle_name.matches("[a-z]+") && middle_name.equals("none")){
                                        //last_name_loop
                                        while (true){
                                            System.out.print("Student Last Name: ");
                                            last_name = call_scanner.next().toLowerCase().trim();
                                            call_scanner.nextLine();
                                            if(last_name.matches("[a-z]+")){
                                                coc_account_email = first_name_FirstLetter + first_name_SecondLetter + first_name_FirstLetter + first_name_SecondLetter + "." + last_name + ".coc@phinmaed.com";

                                                last_first_middle_format = last_name +", " + first_name;
                                                //student_birthday(call_scanner);
                                                return coc_account_email;

                                            }else{
                                                System.out.println("Please Correctly Input Your Last Name.");
                                            }
                                        }
                                    } else if (middle_name.matches("[a-z]+")) {
                                        String[] con_arr_middle_name = {middle_name};
                                        middle_name_FirstLetter = (con_arr_middle_name[0].charAt(0)) + "";
                                        if(middle_name_FirstLetter.matches("[a-z]")){
                                            try {
                                                String middle_name_SecondLetter = (con_arr_middle_name[0].charAt(1)) + "";
                                                //last_name_loop
                                                while (true){
                                                    System.out.print("Student Last Name: ");
                                                    last_name = call_scanner.next().toLowerCase().trim();
                                                    call_scanner.nextLine();
                                                    if(last_name.matches("[a-z]+")){

                                                        coc_account_email = first_name_FirstLetter + first_name_SecondLetter + middle_name_FirstLetter + middle_name_SecondLetter + "." + last_name + ".coc@phinmaed.com";
                                                        last_first_middle_format = last_name + ", " + first_name + " " + middle_name;
                                                        //student_birthday(call_scanner);

                                                        return coc_account_email;

                                                    }else{
                                                        System.out.println("Please Correctly Input Your Last Name.");
                                                    }
                                                }
                                            }catch (StringIndexOutOfBoundsException e){
                                                System.out.println("Please Correctly Input Your Middle Name.");
                                            }
                                        }
                                    } else{
                                        System.out.println("You inputted contain number(s) or special character(s)!Try again.");
                                    }
                                }
                            }
                        } catch (StringIndexOutOfBoundsException e) {
                            System.out.println("Please Correctly Inputted Your First Name");
                        }
                    } else {
                        System.out.println("You may be inputted contain number(s) or special character(s)!Try agains.");
                        break first_name_loop;
                    }
                } else {
                    System.out.println("You may be inputted contain number(s) or special character(s)!Try again.");
                }
            }
        }
    }
    static void create_teacher_table(Scanner call_scanner){
        System.out.print("\nLOG-IN AS A TEACHER");

        try {
            for(int teacher_log_in = 1;teacher_log_in <= 3; teacher_log_in++){
                System.out.print(".");
                Thread.sleep(1000);
            }
        }catch (Exception e){
        }
        while (true){
            while (true){
                System.out.print("\nCreate Account /Already have account[C/A]: ");
                String teacher_choose = call_scanner.next().toLowerCase().trim();
                call_scanner.nextLine();
                if (teacher_choose.equals("c")){
                    tableName = "";
                    while (true){
                        try {
                            // Prompt the user to enter the table name
                            System.out.print("Create Name: ");
                            tableName = call_scanner.nextLine();
                            System.out.print("Create Password: ");
                            String teacher_create_pass = call_scanner.nextLine();
                            String teacher_id = (ThreadLocalRandom.current().nextLong(100000000000L,999999999999L)) + "";

                            // Connect to the database
                            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/class_record_database", "root", "topitagupa09155524404");

                            // Create the SQL query with placeholders for the table name and column names
                            String sql = "CREATE TABLE `class_record_database`.`" + tableName + "` (" +
                                    "`student_id` VARCHAR(50) NOT NULL," +
                                    "`student_name` VARCHAR(45) NOT NULL," +
                                    "`student_birthday` VARCHAR(45) NOT NULL," +
                                    "`student_email` VARCHAR(45) NOT NULL," +
                                    "`student_password` VARCHAR(45) NOT NULL," +
                                    "`filipino_grade` INT NOT NULL," +
                                    "`pr_grade` INT NOT NULL," +
                                    "`philosophy_grade` INT NOT NULL," +
                                    "`pe_grade` INT NOT NULL," +
                                    "`ict_grade` INT NOT NULL," +
                                    "`total_average` DOUBLE NOT NULL," +
                                    "`Evaluation` VARCHAR(50) NOT NULL," +
                                    "PRIMARY KEY (`student_id`)," +
                                    "UNIQUE INDEX `student_id_UNIQUE` (`student_id` ASC) VISIBLE);";

                            // Create the statement and execute the query
                            Statement statement = connection.createStatement();
                            statement.executeUpdate(sql);

                            PreparedStatement insert_teacher_NamePass = connection.prepareStatement("INSERT INTO teacher_name_password (idteacher_name_password,teacher_name,teacher_password) VALUES(?,?,?)");

                            insert_teacher_NamePass.setString(1,teacher_id);
                            insert_teacher_NamePass.setString(2,tableName);
                            insert_teacher_NamePass.setString(3,teacher_create_pass);
                            insert_teacher_NamePass.executeUpdate();

                            System.out.println("Account " + tableName + " created successfully.");

                            boolean command;
                            while (true){
                                try {
                                    command = false;
                                    System.out.println("\n\n");
                                    System.out.println("+----------------------------+");
                                    System.out.println("│        CHOOSE COMMAND      │");
                                    System.out.println("+----------------------------+");
                                    System.out.println("│[1] - Add Student Record    │");
                                    System.out.println("│[2] - Delete Student Record │");
                                    System.out.println("│[3] - Update Student Record │");
                                    System.out.println("│[4] - Show Student Record   │");
                                    System.out.println("+----------------------------+");
                                    System.out.print("Choose Command : ");
                                    int choose_command_teacher = call_scanner.nextInt();

                                    if(choose_command_teacher == 1){
                                        String return_student_completeName = input_RealName(call_scanner);
                                        do {
                                            try {
                                                year_loop = false;
                                                year_loop:
                                                while (true) {
                                                    System.out.print("\nBirth Year:");
                                                    birth_year = call_scanner.nextInt();
                                                    call_scanner.nextLine();
                                                    if (birth_year >= 2000 && birth_year <= 2006) {
                                                        Year_Divide_4 = birth_year / 4;
                                                        int Convert_YeDi4_int = (int) Year_Divide_4;
                                                        leap_year = Year_Divide_4 - Convert_YeDi4_int;
                                                        if (leap_year == 0) {
                                                            //Month
                                                            month_loop:
                                                            while (true) {

                                                                System.out.println("Abbreviation Of Month Or Whole Name Of Month");
                                                                System.out.println("Ex. January ---> Jan/January");
                                                                System.out.print("Month:");

                                                                birth_month = call_scanner.nextLine().toLowerCase().trim();
                                                                if (birth_month.matches("[a-z]+") && birth_month.equals("jan") || birth_month.equals("january") || birth_month.equals("mar") || birth_month.equals("march") || birth_month.equals("may") || birth_month.equals("jul") || birth_month.equals("july") || birth_month.equals("aug") || birth_month.equals("august") || birth_month.equals("oct") || birth_month.equals("october") || birth_month.equals("dec") || birth_month.equals("december")) {
                                                                    String return_coc_account_password = Months_31_days_function(call_scanner);
                                                                    String return_student_BornMonth = Student_BornMonthFunction(call_scanner);
                                                                    Double return_total_average = student_subject_grade();
                                                                    String return_student_BirthBorn = student_BirthDayComplete();
                                                                    add_Student_record();

                                                                    boolean command_bool;
                                                                    while (true){
                                                                        try {
                                                                            command_bool = false;
                                                                            System.out.println("+----------------------------+");
                                                                            System.out.println("│        CHOOSE COMMAND      │");
                                                                            System.out.println("+----------------------------+");
                                                                            System.out.println("│[1] - Add Student Record    │");
                                                                            System.out.println("│[5] - Return                │");
                                                                            System.out.println("+----------------------------+");

                                                                            System.out.print("Choose Command: ");
                                                                            int command_choose = call_scanner.nextInt();
                                                                            if(command_choose == 1){
                                                                                System.out.println("Adding more Student");
                                                                                String return_AddMore_student = input_RealName(call_scanner);
                                                                                break month_loop;

                                                                            } else if (command_choose == 5) {
                                                                                break year_loop;
                                                                            }else{
                                                                                System.out.println("Invalid Command");
                                                                            }

                                                                        }catch (Exception e){
                                                                            command_bool = true;
                                                                            System.out.println("Invalid Command");
                                                                            call_scanner.next();
                                                                        }
                                                                    }


                                                                } else if (birth_month.matches("[a-z]+") && birth_month.equals("nov") || birth_month.equals("november") || birth_month.equals("sep") || birth_month.equals("september") || birth_month.equals("jun") || birth_month.equals("june") || birth_month.equals("apr") || birth_month.equals("april")) {
                                                                    String return_coc_account_password = Months_30_days_function(call_scanner);
                                                                    String return_student_BornMonth = Student_BornMonthFunction(call_scanner);


                                                                } else if (birth_year == 2000 && birth_month.equals("feb") || birth_month.equals("february") || birth_year == 2004 && birth_month.equals("feb") || birth_month.equals("february")) {
                                                                    String return_coc_account_password = february_LeapYear_function(call_scanner);
                                                                    String return_student_BornMonth = Student_BornMonthFunction(call_scanner);


                                                                } else if (birth_month.equals("feb") || birth_month.equals("february")) {
                                                                    String return_coc_account_password = february_NotLeapYear_function(call_scanner);
                                                                    String return_student_BornMonth = Student_BornMonthFunction(call_scanner);


                                                                } else {
                                                                    System.out.println("Invalid Months");
                                                                }
                                                            }
                                                        }
                                                    } else {
                                                        System.out.println("Invalid Year");
                                                    }
                                                }

                                            } catch (Exception e) {
                                                year_loop = true;
                                                System.out.println("Invalid Year");
                                                call_scanner.next();
                                            }
                                        } while (year_loop);

                                    } else if (choose_command_teacher == 2) {
                                        //Delete Student Record
                                        delete_student_record(call_scanner);
                                    } else if (choose_command_teacher == 3) {
                                        //Update Student Record
                                        update_student_record(call_scanner);
                                    } else if (choose_command_teacher == 4) {
                                        //Class Record
                                        class_record();
                                    }else{
                                        System.out.println("Invalid Command.");
                                    }

                                }catch (Exception e){
                                    command = true;
                                    System.out.println("Invalid Command.");
                                    call_scanner.next();
                                }
                            }

                        } catch (Exception e) {
                            if(e.getMessage().contains(tableName)){
                                System.out.println("Account already exists.");
                            }else{
                                System.out.println("An error occurred while creating the account: " + e.getMessage());
                            }
                        }
                    }

                }else if (teacher_choose.equals("a")){
                    try {
                        Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/class_record_database", "root", "topitagupa09155524404");
                        System.out.print("Enter Name: ");
                        String teacher_name_enter = call_scanner.nextLine();
                        System.out.println("Enter Password: ");
                        String teacher_password_enter = call_scanner.nextLine();

                        String Have_account_login = "SELECT * FROM teacher_name_password WHERE teacher_name = ? AND teacher_password = ?";

                        PreparedStatement checking_teacher_AND_password = connection.prepareStatement(Have_account_login);

                        checking_teacher_AND_password.setString(1,teacher_name_enter);
                        checking_teacher_AND_password.setString(2,teacher_password_enter);

                        ResultSet checking = checking_teacher_AND_password.executeQuery();

                        if(checking.next()){
                            System.out.println("Access Granted");
                        }else{
                            System.out.println("Access Denied");
                        }
                    }catch (Exception e){
                        System.out.println("An error occurred while creating the table: " + e.getMessage());
                    }
                }else{
                    System.out.println("\nInvalid choice. Please enter 'C' Create Account for  or 'A' for Already have account.");
                    break;
                }
            }
        }
    }


    static void class_record(){
        try {
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/class_record_database", "root", "topitagupa09155524404");
            Statement show_records = connection.createStatement();
            ResultSet all_records = show_records.executeQuery("SELECT * FROM `"+ tableName +"` ");

            if(!all_records.isBeforeFirst()){
                System.out.println("\nClass Record Is Empty");
            }else{
                System.out.println("+===========+============+============================================================+====================+========================================+==========+==========+===================+============+====================+=====+==========+===============+");
                System.out.println("│NO. STUDENT│ STUDENT ID │ STUDENT NAME                                               │      BIRTHDAY      │             EMAIL                      │ PASSWORD │ FILIPINO │ PRACTICAL RESEARCH| PHILOSOPHY | PHYSICAL EDUCATION | ICT |  AVERAGE |   EVALUATION  |");
                System.out.println("+===========+============+============================================================+====================+========================================+==========+==========+===================+============+====================+=====+==========+===============+");
                int count_record = 1;

                while (all_records.next()) {
                    System.out.printf("│%1$-11s│%2$-12s│%3$-60s│%4$-20s│%5$-40s│%6$-10s│%7$-10s│%8$-19s│%9$-12s│%10$-20s│%11$-5s│%12$-10s│%13$-15s│%n", count_record + ").", all_records.getString("student_id"), all_records.getString("student_name"), all_records.getString("student_birthday"), all_records.getString("student_email"), all_records.getString("student_password"), all_records.getInt("filipino_grade") + "", all_records.getInt("pr_grade") + "", all_records.getInt("philosophy_grade") + "", all_records.getInt("pe_grade") + "", all_records.getInt("ict_grade") + "",all_records.getInt("total_average") + "", all_records.getString("Evaluation"));
                    count_record++;

                }
                System.out.println("+===========+============+============================================================+====================+========================================+==========+==========+===================+============+====================+=====+==========+===============+");            }

        }catch (Exception e){
            System.out.println("Error in Seeing Class Record");
            e.printStackTrace();
        }
    }

    static  void delete_student_record(Scanner call_scanner){
        Delete_loop:
        while (true){
            try {
                class_record();
                Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/class_record_database", "root", "topitagupa09155524404");
                Statement database_empty_value = connection.createStatement();
                ResultSet delete_student = database_empty_value.executeQuery("SELECT * FROM `"+tableName+"` ");

                if(!delete_student.isBeforeFirst()){
                    System.out.println("Class Record Is Empty! You Can't Use Delete Command.");
                    break;
                }else{
                    PreparedStatement delete_student_record = connection.prepareStatement("DELETE FROM `"+tableName+"` WHERE student_id = ?");
                    System.out.print("Enter Student ID: ");
                    String student_id_delete = call_scanner.next();
                    call_scanner.nextLine();

                    delete_student_record.setString(1,student_id_delete);
                    int delete_message = delete_student_record.executeUpdate();
                    if(delete_message > 0){
                        System.out.println("Student Successfully Deleted In Class Record");
                        class_record();
                        while (true){
                            System.out.println("+----------------------------+");
                            System.out.println("│        CHOOSE COMMAND      │");
                            System.out.println("+----------------------------+");
                            System.out.println("│[T] - Try Again             │");
                            System.out.println("│[B] - Back                  │");
                            System.out.println("+----------------------------+");
                            System.out.print("Choose Command: ");
                            String try_again_delete = call_scanner.nextLine().toLowerCase().trim();
                            if(try_again_delete.equals("t")){
                                break;
                            } else if (try_again_delete.equals("b")) {
                                break Delete_loop;
                            }else{
                                System.out.println("Invalid Command");
                            }
                        }
                    }else{
                        System.out.println("Student ID: " + student_id_delete + " not found.");
                        while (true){
                            System.out.println("+----------------------------+");
                            System.out.println("│        CHOOSE COMMAND      │");
                            System.out.println("+----------------------------+");
                            System.out.println("│[T] - Try Again             │");
                            System.out.println("│[B] - Back                  │");
                            System.out.println("+----------------------------+");
                            System.out.print("Choose Command: ");
                            String try_again_delete = call_scanner.nextLine().toLowerCase().trim();
                            if(try_again_delete.equals("t")){
                                break;
                            } else if (try_again_delete.equals("b")) {
                                break Delete_loop;
                            }else{
                                System.out.println("Invalid Command");
                            }
                        }
                    }
                }
            }catch (Exception e){
                e.printStackTrace();
            }
        }
    }
    static void add_Student_record(){
        try {
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/class_record_database", "root", "topitagupa09155524404");
            PreparedStatement insert_StudentClassRecord = connection.prepareStatement("INSERT INTO `" + tableName + "`(student_id,student_name,student_birthday,student_email,student_password,filipino_grade,pr_grade,philosophy_grade,pe_grade,ict_grade,total_average,Evaluation) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)");

            student_id = (ThreadLocalRandom.current().nextLong(100000000000L,999999999999L)) + "";

            String Convert_Name_LetterWillBig = last_first_middle_format.toUpperCase();
            insert_StudentClassRecord.setString(1,student_id);
            insert_StudentClassRecord.setString(2,Convert_Name_LetterWillBig);
            insert_StudentClassRecord.setString(3,student_AddCompleteBirthDay);
            insert_StudentClassRecord.setString(4,coc_account_email);
            insert_StudentClassRecord.setString(5,coc_account_password);
            insert_StudentClassRecord.setInt(6,fil_grade);
            insert_StudentClassRecord.setInt(7, pr_grade);
            insert_StudentClassRecord.setInt(8, philo_grade);
            insert_StudentClassRecord.setInt(9, pe_grade);
            insert_StudentClassRecord.setInt(10, ict_grade);
            insert_StudentClassRecord.setDouble(11,total_average);

            if(total_average <= 74){
                insert_StudentClassRecord.setString(12,"Failed");
                int rowAffected = insert_StudentClassRecord.executeUpdate();
                if (rowAffected > 0) {
                    System.out.println( Convert_Name_LetterWillBig +" Successfully Added In Class Record");
                    class_record();
                } else {
                    System.out.println("Their no new data Added");
                }
            }else{
                insert_StudentClassRecord.setString(12,"Passed");
                int rowAffected = insert_StudentClassRecord.executeUpdate();
                if (rowAffected > 0) {
                    System.out.println(Convert_Name_LetterWillBig + " Successfully Added In Class Record");
                    class_record();
                } else {
                    System.out.println("Their no new data Added");
                }
            }
        }catch (Exception e){
            e.printStackTrace();
        }
    }

    

    static int filipino_grade(Scanner call_scanner){
        boolean filipino;
        while (true){
            try {
                filipino = false;
                System.out.print("Enter Filipino Grade: ");
                fil_grade = call_scanner.nextInt();
                if(fil_grade >= 101){
                    System.out.println("Invalid Grade Input");
                } else if (fil_grade <= 69) {
                    System.out.println("Invalid Grade Input");
                }else{
                    return fil_grade;
                }

            }catch (Exception e){
                filipino = true;
                System.out.println("Invalid Grade Input");
                call_scanner.next();
            }
        }
    }

    static int practical_research_grade(Scanner call_scanner){
        boolean practical_research;
        while (true){
            try {
                practical_research = false;
                System.out.print("Enter Practical Research Grade: ");
                pr_grade = call_scanner.nextInt();

                if(pr_grade >= 101){
                    System.out.println("Invalid Grade Input");
                } else if (pr_grade <= 69) {
                    System.out.println("Invalid Grade Input");
                }else {
                    return pr_grade;
                }

            }catch (Exception e){
                practical_research = true;
                System.out.println("Invalid Grade Input");
                call_scanner.next();
            }
        }
    }

    static int philosophy_grade(Scanner call_scanner){
        boolean philosophy;
        while (true){
            try {
                philosophy = false;
                System.out.print("Enter Philosophy Grade: ");
                philo_grade = call_scanner.nextInt();

                if(philo_grade >= 101){
                    System.out.println("Invalid Grade Input");
                } else if (philo_grade <= 69) {
                    System.out.println("Invalid Grade Input");
                }else {
                    return philo_grade;
                }

            }catch (Exception e){
                philosophy = true;
                System.out.println("Invalid Grade Input");
                call_scanner.next();
            }
        }
    }

    static int physical_education_grade(Scanner call_scanner){
        boolean physical_education;
        while (true){
            try {
                physical_education = false;

                System.out.print("Enter Physical Education Grade: ");
                pe_grade = call_scanner.nextInt();

                if(pe_grade >= 101){
                    System.out.println("Invalid Grade Input");
                } else if (pe_grade <= 69 ) {
                    System.out.println("Invalid Grade Input");
                }else{
                    return pe_grade;
                }

            }catch (Exception e){
                physical_education = true;
                System.out.println("Invalid Grade Input");
                call_scanner.next();
            }
        }
    }

    static int ict_grade(Scanner call_scanner){
        boolean ict;
        while (true){
            try {
                ict = false;
                System.out.print("Enter Ict Grade: ");
                ict_grade = call_scanner.nextInt();

                if (ict_grade >= 101){
                    System.out.println("Invalid Grade Input");

                } else if (ict_grade <= 69) {
                    System.out.println("Invalid Grade Input");

                }else{
                    return ict_grade;
                }

            }catch (Exception e){
                ict = true;
                System.out.println("Invalid Grade Input");
                call_scanner.next();
            }
        }
    }

   static double student_subject_grade(){
       int return_filipino_grade = filipino_grade(call_scanner);
       int return_practical_research = practical_research_grade(call_scanner);
       int return_philosophy_grade = philosophy_grade(call_scanner);
       int return_physical_education_grade = physical_education_grade(call_scanner);
       int return_ict_grade = ict_grade(call_scanner);
       int total_grade = return_filipino_grade + return_practical_research + return_philosophy_grade + return_physical_education_grade + return_ict_grade;
       total_average = total_grade / 5.0;
       System.out.println();
       return total_average;

   }

    static String Student_BornMonthFunction(Scanner call_scanner){
        if(birth_month.equals("jan") || birth_month.equals("january")){
            student_BirthMonthComplete = "JANUARY";

        }else if(birth_month.equals("feb") || birth_month.equals("february")){
            student_BirthMonthComplete = "FEBRUARY";

        }else if(birth_month.equals("mar") || birth_month.equals("march")){
            student_BirthMonthComplete = "MARCH";

        }else if(birth_month.equals("apr") || birth_month.equals("april")){
            student_BirthMonthComplete = "APRIL";

        }else if(birth_month.equals("may")){
            student_BirthMonthComplete = "MAY";

        }else if(birth_month.equals("jun") || birth_month.equals("june")){
            student_BirthMonthComplete = "JUNE";

        }else if(birth_month.equals("jul") || birth_month.equals("july")){
            student_BirthMonthComplete = "JULY";

        }else if(birth_month.equals("aug") || birth_month.equals("august")){
            student_BirthMonthComplete = "AUGUST";

        }else if(birth_month.equals("sep") || birth_month.equals("september")){
            student_BirthMonthComplete = "SEPTEMBER";

        }else if(birth_month.equals("oct") || birth_month.equals("october")){
            student_BirthMonthComplete = "OCTOBER";

        }else if(birth_month.equals("nov") || birth_month.equals("november")){
            student_BirthMonthComplete = "NOVEMBER";

        }else if(birth_month.equals("dec") || birth_month.equals("december")){
            student_BirthMonthComplete = "DECEMBER";

        }
        return student_BornMonth;
    }

    static String student_BirthDayComplete(){
        student_AddCompleteBirthDay = student_BirthMonthComplete + " " + birth_day + " " + birth_year;
        return student_AddCompleteBirthDay;
    }

    //Months that has 31 days
    static String Months_31_days_function(Scanner call_scanner){
        while (true) {
            System.out.print("Day:");
            if (call_scanner.hasNextInt()) {
                birth_day = call_scanner.nextInt();
                try {
                    if (birth_day >= 1 && birth_day <= 31) {
                        Con_birth_year = (int) birth_year;
                        ConStr_birth_year =  Integer.toString(Con_birth_year);
                        ConStr_birth_day = Integer.toString(birth_day);

                        //Student Password Generated
                        coc_account_password = ConStr_birth_year + ConStr_birth_day;

                        return coc_account_password;

                    } else {
                        System.out.println("Invalid Day Number");
                    }
                } catch (Exception e) {
                    System.out.println("Invalid Day Number");
                }
            } else {
                System.out.println("Invalid Day Number");
                call_scanner.next();
            }
        }
    }

    //Months that has 30 days function
    static String Months_30_days_function(Scanner call_scanner) {
        while (true) {
            System.out.print("Day:");
            if (call_scanner.hasNextInt()) {
                birth_day = call_scanner.nextInt();
                try {
                    if (birth_day >= 1 && birth_day <= 30) {
                        Con_birth_year = (int) birth_year;
                        ConStr_birth_year =  Integer.toString(Con_birth_year);
                        ConStr_birth_day = Integer.toString(birth_day);

                        //Student Password Generated
                        coc_account_password = ConStr_birth_year + ConStr_birth_day;

                        return coc_account_password;

                    } else {
                        System.out.println("Invalid Day Number");
                    }
                } catch (Exception e) {
                    System.out.println("Invalid Day Number");
                }
            } else {
                System.out.println("Invalid Day Number");
                call_scanner.next();
            }
        }
    }

    //Month that has 29 days
    //February Leap Year Function
    static String february_LeapYear_function(Scanner call_scanner) {
        while (true) {
            System.out.print("Day:");
            if (call_scanner.hasNextInt()) {
                birth_day = call_scanner.nextInt();
                try {
                    if (birth_day >= 1 && birth_day <= 29) {
                        System.out.println("February");
                        Con_birth_year = (int) birth_year;
                        ConStr_birth_year =  Integer.toString(Con_birth_year);
                        ConStr_birth_day = Integer.toString(birth_day);

                        //Student Password Generated
                        coc_account_password = ConStr_birth_year + ConStr_birth_day;

                        return coc_account_password;

                    } else {
                        System.out.println("Invalid Day Number");
                    }
                } catch (Exception e) {
                    System.out.println("Invalid Day Number");
                }
            } else {
                System.out.println("Invalid Day Number");
                call_scanner.next();
            }
        }
    }

    //Month that has 28 days
    //February Not Leap Year function
    static String february_NotLeapYear_function(Scanner call_scanner) {
        while (true) {
            System.out.print("Day:");
            if (call_scanner.hasNextInt()) {
                birth_day = call_scanner.nextInt();
                try {
                    if (birth_day >= 1 && birth_day <= 28) {
                        Con_birth_year = (int) birth_year;

                        ConStr_birth_year =  Integer.toString(Con_birth_year);
                        ConStr_birth_day = Integer.toString(birth_day);

                        //Student Password Generated
                        coc_account_password = ConStr_birth_year + ConStr_birth_day;

                        return coc_account_password;

                    } else {
                        System.out.println("Invalid Day Number");
                    }
                } catch (Exception e) {
                    System.out.println("Invalid Day Number");
                }
            } else {
                System.out.println("Invalid Day Number");
                call_scanner.next();
            }
        }
    }


    public static void main(String[] args) {

        System.out.println("LOG-IN CLASSROOM\n");
        System.out.println("+-----------------+");
        System.out.println("│LOG-IN AS A:[S/T]│");
        System.out.println("+-----------------+");
        System.out.println("│[S] - STUDENT    │");
        System.out.println("│[T] - TEACHER    │");
        System.out.println("+-----------------+");
        System.out.print("LOG-IN AS A [S/T]: ");

        while (true){
            while (true){
                String user_choose = call_scanner.next().toLowerCase().trim();

                if (user_choose.equals("s")){
                    System.out.println("Student");
                }else if (user_choose.equals("t")) {
                    create_teacher_table(call_scanner);
                }else{
                    System.out.println("\nInvalid choice. Please enter 'S' for Student or 'T' for Teacher.");
                    System.out.println("+-----------------+");
                    System.out.println("│LOG-IN AS A:[S/T]│");
                    System.out.println("+-----------------+");
                    System.out.println("│[S] - STUDENT    │");
                    System.out.println("│[T] - TEACHER    │");
                    System.out.println("+-----------------+");
                    System.out.print("LOG-IN AS A [S/T]:");
                    break;
                }
            }
        }
    }
}
